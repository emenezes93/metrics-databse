version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql-server
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: testdb
      MYSQL_USER: testuser
      MYSQL_PASSWORD: testpassword
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-config/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - monitoring
    restart: unless-stopped
    command: --performance-schema=ON
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootpassword"]
      timeout: 10s
      retries: 3

  mysql-exporter:
    image: prom/mysqld-exporter:latest
    container_name: mysql-exporter
    environment:
      DATA_SOURCE_NAME: "root:rootpassword@tcp(mysql:3306)/"
    ports:
      - "9104:9104"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - monitoring
    restart: unless-stopped
    command: ["--config.my-cnf", ""]

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    networks:
      - monitoring
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: "false"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus
    networks:
      - monitoring
    restart: unless-stopped

  k6:
    image: grafana/k6:latest
    container_name: k6-runner
    volumes:
      - ./k6-tests:/scripts
    depends_on:
      - mysql
      - prometheus
    networks:
      - monitoring
    entrypoint: ["sleep", "infinity"]

  setup:
    build: .
    container_name: mysql-setup
    depends_on:
      - mysql
    volumes:
      - ./scripts:/scripts
    networks:
      - monitoring
    environment:
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_USER: testuser
      MYSQL_PASSWORD: testpassword
      MYSQL_DATABASE: testdb
    entrypoint: ["sleep", "infinity"]

volumes:
  mysql_data:
  prometheus_data:
  grafana_data:

networks:
  monitoring:
    driver: bridge